# 单源传递给多个输出，比如本地的文件变动传递给hdfs同时打印，

# 和file_flume_avro_2一起看
# 和file_flume_avro_3一起看

# 几个channele，以及channle选择器的选用
# sink组策略


# 注意必须要使用两个channel，因为多个sink组内间只有defalut，loadbalance，failover三种，
# defalut ：一个channel对应一个sink，所有的内容都给一个sink
# loadbalance： 轮询性质，每个获取的是内容的一条，同一批的消息被切分了
# failover ：同时只有一个组内的在工作，其他的作为故障转移使用
# 所有必须要定义两个channel

# channel选择器：replicating（所有的channel获取相同的全部数据），multiplexing（多路可以选择每个channel存什么）

# 先开source的服务器，source为服务端，否则报错连接不上

# 必須注意:所有的注释不能在行内，只能另外起一行

# defind agent
a1.sources = r1
a1.channels = c1 c2
a1.sinks = k1 k2
a1.sources.r1.selector.type = replicating
# replicating是默认的不写也行，注释需要另外的行写

# source
a1.sources.r1.type = TAILDIR
a1.sources.r1.filegroups = f1
a1.sources.r1.filegroups.f1= /etc/software/.*txt
a1.sources.r1.fileHeader = true
agent.sources.s1.positionFile = /flume/taildir_position_1.json

# channel
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

a1.channels.c2.type = memory
a1.channels.c2.capacity = 1000
a1.channels.c2.transactionCapacity = 100

# sinks
a1.sinks.k1.type = avro
a1.sinks.k1.hostname = 192.168.3.107
a1.sinks.k1.port = 4545

a1.sinks.k2.type = avro
a1.sinks.k2.hostname = 192.168.3.107
a1.sinks.k2.port = 4141

# bind
a1.sources.r1.channels = c1 c2
a1.sinks.k1.channel = c1
a1.sinks.k2.channel = c2
